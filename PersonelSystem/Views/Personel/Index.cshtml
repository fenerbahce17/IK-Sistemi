@model List<PersonelSystem.Personel>

@{
    ViewBag.Title = "Personel Listesi";
}

<div class="container mt-5">
    <h2 class="mb-4 text-primary">👨‍💼 Personel Listesi</h2>

    <!-- Filtreleme Formu -->
    <div class="card mb-4 shadow-sm">
        <div class="card-body">
            <h5 class="card-title">Filtreleme</h5>
            <form id="filterForm" class="row g-3">
                <div class="col-md-3">
                    <label for="filterAd" class="form-label">Ad</label>
                    <input type="text" class="form-control" id="filterAd" placeholder="Ada göre filtrele">
                </div>
                <div class="col-md-3">
                    <label for="filterSoyad" class="form-label">Soyad</label>
                    <input type="text" class="form-control" id="filterSoyad" placeholder="Soyada göre filtrele">
                </div>
                <div class="col-md-3">
                    <label for="filterEmail" class="form-label">Email</label>
                    <input type="text" class="form-control" id="filterEmail" placeholder="Email'e göre filtrele">
                </div>
                <div class="col-md-3">
                    <label for="filterCinsiyet" class="form-label">Cinsiyet</label>
                    <select class="form-select" id="filterCinsiyet">
                        <option value="">Tümü</option>
                        <option value="Erkek">Erkek</option>
                        <option value="Kadın">Kadın</option>
                    </select>
                </div>
                <div class="col-12">
                    <button type="button" id="filterBtn" class="btn btn-primary">Filtrele</button>
                    <button type="button" id="resetFilterBtn" class="btn btn-outline-secondary">Filtreyi Temizle</button>
                </div>
            </form>
        </div>
    </div>

    <div class="table-responsive shadow-sm rounded-4 overflow-hidden">
        <table class="table table-hover table-bordered align-middle" id="personelTable">
            <thead class="table-primary">
                <tr>
                    <th width="50"><input type="checkbox" id="tumunuSec" /></th>
                    <th class="sortable" data-column="Ad">Ad <i class="bi bi-arrow-down-up"></i></th>
                    <th class="sortable" data-column="Soyad">Soyad <i class="bi bi-arrow-down-up"></i></th>
                    <th class="sortable" data-column="Email">Email <i class="bi bi-arrow-down-up"></i></th>
                    <th class="sortable" data-column="Telefon">Telefon <i class="bi bi-arrow-down-up"></i></th>
                    <th class="sortable" data-column="Cinsiyet">Cinsiyet <i class="bi bi-arrow-down-up"></i></th>
                    <th width="180">İşlem</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var personel in Model)
                {
                    <tr id="satir-@personel.PersonelId">
                        <td>
                            <input type="checkbox" class="secimKutusu" value="@personel.PersonelId" />
                        </td>
                        <td>@personel.Ad</td>
                        <td>@personel.Soyad</td>
                        <td>@personel.Email</td>
                        <td>@personel.Telefon</td>
                        <td>
                            @if (personel.Cinsiyet == "Erkek")
                            {
                                <span class="badge bg-primary">👨 Erkek</span>
                            }
                            else if (personel.Cinsiyet == "Kadın")
                            {
                                <span class="badge bg-danger">👩 Kadın</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Belirtilmemiş</span>
                            }
                        </td>
                        <td>
                            <a href="@Url.Action("Edit", "Personel", new { id = personel.PersonelId })"
                               class="btn btn-sm btn-outline-primary">Düzenle</a>
                            <button class="btn btn-sm btn-outline-danger deleteBtn"
                                    data-id="@personel.PersonelId">
                                Sil
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-between mt-3">
        <a href="@Url.Action("Create", "Personel")" class="btn btn-secondary">Kayıt Ekranına Dön</a>
        <button id="topluSilBtn" class="btn btn-danger">🗑️ Seçilenleri Sil</button>
    </div>
</div>

@section scripts {
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css">
    <script>
        $(document).ready(function () {

            // ✅ SİLME İŞLEMİ
            $('.deleteBtn').click(function () {
                var id = $(this).data('id');

                if (!confirm("Bu kişiyi silmek istediğinize emin misiniz?")) return;

                $.ajax({
                    url: '/Personel/DeleteAjax',
                    type: 'POST',
                    data: { id: id },
                    success: function (res) {
                        if (res.success) {
                            alert("Kayıt silindi ✅");
                            location.reload(); // veya sadece satırı sil: $('#satir-' + id).remove();
                        } else {
                            alert("❌ Hata: " + res.message);
                        }
                    }
                });
            });
            $(document).ready(function () {

                $('#topluSilBtn').click(function () {
                    var secilenler = [];

                    $('.secimKutusu:checked').each(function () {
                        secilenler.push($(this).val());
                    });

                    if (secilenler.length === 0) {
                        alert("Lütfen silmek istediğiniz kişileri seçin.");
                        return;
                    }

                    if (!confirm("Seçilen kişileri silmek istediğinize emin misiniz?")) return;

                    $.ajax({
                        url: '/Personel/DeleteSelected',
                        type: 'POST',
                        traditional: true, // Liste gönderimi için önemli
                        data: { ids: secilenler },
                        success: function (res) {
                            if (res.success) {
                                // Başarıyla silinen satırları DOM'dan kaldır
                                secilenler.forEach(function (id) {
                                    $('#satir-' + id).remove();
                                });
                                alert("✅ Seçilen kayıtlar başarıyla silindi.");
                            } else {
                                alert("❌ Hata: " + res.message);
                            }
                        }
                    });
                });

            });


        });
        $('#tumunuSec').click(function () {
            $('.secimKutusu').prop('checked', this.checked);
        });






        ///FİLTRELEME KODLARI

        $(document).ready(function () {
            // Tablo verilerini sakla
            var tableData = $('#personelTable tbody tr').map(function () {
                return {
                    element: $(this),
                    ad: $(this).find('td:eq(1)').text().trim().toLowerCase(),
                    soyad: $(this).find('td:eq(2)').text().trim().toLowerCase(),
                    email: $(this).find('td:eq(3)').text().trim().toLowerCase(),
                    telefon: $(this).find('td:eq(4)').text().trim().toLowerCase(),
                    cinsiyet: $(this).find('td:eq(5)').text().trim().toLowerCase()
                };
            }).get();

            // Sıralama durumu
            var sortState = {
                column: null,
                direction: 'asc'
            };

            // Filtreleme fonksiyonu
            function filterTable() {
                var filterAd = $('#filterAd').val().toLowerCase();
                var filterSoyad = $('#filterSoyad').val().toLowerCase();
                var filterEmail = $('#filterEmail').val().toLowerCase();
                var filterCinsiyet = $('#filterCinsiyet').val().toLowerCase();

                $('#personelTable tbody').empty();

                $.each(tableData, function (index, row) {
                    var showRow = true;

                    if (filterAd && !row.ad.includes(filterAd)) {
                        showRow = false;
                    }
                    if (filterSoyad && !row.soyad.includes(filterSoyad)) {
                        showRow = false;
                    }
                    if (filterEmail && !row.email.includes(filterEmail)) {
                        showRow = false;
                    }
                    if (filterCinsiyet && !row.cinsiyet.includes(filterCinsiyet)) {
                        showRow = false;
                    }

                    if (showRow) {
                        $('#personelTable tbody').append(row.element);
                    }
                });
            }

            // Sıralama fonksiyonu
            function sortTable(column, direction) {
                var rows = $('#personelTable tbody tr').get();

                rows.sort(function (a, b) {
                    var aValue, bValue;

                    // Sıralanacak sütun değerlerini al
                    switch (column) {
                        case 'Ad':
                            aValue = $(a).find('td:eq(1)').text().trim().toLowerCase();
                            bValue = $(b).find('td:eq(1)').text().trim().toLowerCase();
                            break;
                        case 'Soyad':
                            aValue = $(a).find('td:eq(2)').text().trim().toLowerCase();
                            bValue = $(b).find('td:eq(2)').text().trim().toLowerCase();
                            break;
                        case 'Email':
                            aValue = $(a).find('td:eq(3)').text().trim().toLowerCase();
                            bValue = $(b).find('td:eq(3)').text().trim().toLowerCase();
                            break;
                        case 'Telefon':
                            aValue = $(a).find('td:eq(4)').text().trim().toLowerCase();
                            bValue = $(b).find('td:eq(4)').text().trim().toLowerCase();
                            break;
                        case 'Cinsiyet':
                            aValue = $(a).find('td:eq(5)').text().trim().toLowerCase();
                            bValue = $(b).find('td:eq(5)').text().trim().toLowerCase();
                            break;
                        default:
                            return 0;
                    }

                    // Sayısal sıralama için (telefon)
                    if (column === 'Telefon') {
                        aValue = aValue.replace(/\D/g, '');
                        bValue = bValue.replace(/\D/g, '');
                        return direction === 'asc' ? aValue - bValue : bValue - aValue;
                    }

                    // Alfabetik sıralama
                    if (aValue < bValue) {
                        return direction === 'asc' ? -1 : 1;
                    }
                    if (aValue > bValue) {
                        return direction === 'asc' ? 1 : -1;
                    }
                    return 0;
                });

                // Sıralanmış satırları tabloya ekle
                $.each(rows, function (index, row) {
                    $('#personelTable tbody').append(row);
                });

                // Sıralama ikonlarını güncelle
                $('.sortable i').removeClass('bi-arrow-up bi-arrow-down').addClass('bi-arrow-down-up');
                var icon = direction === 'asc' ? 'bi-arrow-up' : 'bi-arrow-down';
                $(`.sortable[data-column="${column}"] i`).removeClass('bi-arrow-down-up').addClass(icon);
            }

            // Filtreleme butonu
            $('#filterBtn').click(filterTable);

            // Filtre temizleme butonu
            $('#resetFilterBtn').click(function () {
                $('#filterForm input').val('');
                $('#filterCinsiyet').val('');
                filterTable();
            });

            // Sıralama butonları
            $('.sortable').click(function () {
                var column = $(this).data('column');

                if (sortState.column === column) {
                    sortState.direction = sortState.direction === 'asc' ? 'desc' : 'asc';
                } else {
                    sortState.column = column;
                    sortState.direction = 'asc';
                }

                sortTable(column, sortState.direction);
            });

            // Silme işlemleri (mevcut kodunuz)
            $('.deleteBtn').click(function () {
                var id = $(this).data('id');
                if (!confirm("Bu kişiyi silmek istediğinize emin misiniz?")) return;

                $.ajax({
                    url: '/Personel/DeleteAjax',
                    type: 'POST',
                    data: { id: id },
                    success: function (res) {
                        if (res.success) {
                            alert("Kayıt silindi ✅");
                            location.reload();
                        } else {
                            alert("❌ Hata: " + res.message);
                        }
                    }
                });
            });

            $('#topluSilBtn').click(function () {
                var secilenler = [];
                $('.secimKutusu:checked').each(function () {
                    secilenler.push($(this).val());
                });

                if (secilenler.length === 0) {
                    alert("Lütfen silmek istediğiniz kişileri seçin.");
                    return;
                }

                if (!confirm("Seçilen kişileri silmek istediğinize emin misiniz?")) return;

                $.ajax({
                    url: '/Personel/DeleteSelected',
                    type: 'POST',
                    traditional: true,
                    data: { ids: secilenler },
                    success: function (res) {
                        if (res.success) {
                            secilenler.forEach(function (id) {
                                $('#satir-' + id).remove();
                            });
                            alert("✅ Seçilen kayıtlar başarıyla silindi.");
                        } else {
                            alert("❌ Hata: " + res.message);
                        }
                    }
                });
            });

            $('#tumunuSec').click(function () {
                $('.secimKutusu').prop('checked', this.checked);
            });
        });
    </script>
}



